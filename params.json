{"name":"Masstable","tagline":"The Nuclear Mass Table Toolkit","body":"===========================\r\nNuclear Mass Table Toolkit\r\n===========================\r\n\r\n- [Nuclear Mass Table Toolkit](#nuclear-mass-table-toolkit)\r\n\t- [Usage:](#usage)\r\n        - [Table creation](#table creation)\r\n        - [Selecting elements](#Selecting elements)\r\n        - [Derived quantities](#derived quantities)\r\n\t- [Install](#install)\r\n\t- [Requirements](#requirements)\r\n\t- [Credits](#credits)\r\n\r\nThe Nuclear Mass Table Toolkit provides utilities to work with nuclear mass tables. At the moment the following tables are supported:\r\n\r\n* **AME2003**: G. Audi, H. Wapstra, C. Thibault, *Nucl. Phys. A* **729** (2003) 337\r\n* **AME2003all**: Same as above but including interpolated(\"#\") values\r\n* **AME2012**: G. Audi et al, *Chinese Physics C.*  **36**, No. 12(2012)\r\n* **AME2012all**: Same as above but including interpolated(\"#\") values\r\n* **AME1995**: Audi, G., and A. H. Wapstra, *Nuclear Physics A* **595** (4) (1995): 409-480\r\n* **AME1995all**: Same as above but including interpolated(\"#\") values\r\n* **DUZU**: J. Duflo, A.P. Zuker, *Phys. Rev. C* **52** (1995)\r\n* **FRDM95**: Moller, P. et al., *At. Data and Nuc. Data Tables* **59** (1995) 185\r\n* **KTUY05**: H. Koura, T.Tachibana, M. Uno, M. Yamada, *Progr. Theor. Phys.* **113** (2005) 305\r\n* **ETFSI12**: Y. Aboussir et al., *At. Data Nucl. Data Tables* **61** (1995) 127\r\n* **MAJA88**: Masson, P. J., and J. Jänecke, *Atomic Data and Nuclear Data Tables* **39.2** (1988): 273-280.\r\n* **GK88**: Jänecke, J., and P. J. Masson, *Atomic Data and Nuclear Data Tables* **39.2** (1988): 265-271.\r\n* **HFB14**: S. Goriely, M. Samyn, J.M. Pearson, *Phys. Rev. C* **75** 064312 (2007)\r\n* **HFB26**: S. Goriely, N. Chamel, J.M. Pearson, *Phys. Rev. C* **88** 024308 (2013)\r\n* **WS32010**: N. Wang, Z. Liang, M. Liu, X. Wu, *Phys. Rev. C* **82** 044304 (2010)\r\n* **WS32011**: M. Liu, N. Wang, Y. Deng, X. Wu, *Phys. Rev. C* **84** 014333 (2011)\r\n\r\n\r\nUsage:\r\n---------\r\n### Table creation\r\n\r\n* Print first 5 elements from Audi 2003:\r\n```python\r\n>>> from masstable import Table\r\n>>> Table('AME2003').head()\r\nZ  N\r\n0  1     8.07132\r\n1  0     7.28897\r\n   1    13.13570\r\n   2    14.94980\r\n   3    25.90150\r\n```\r\n\r\n* Create a Table object from given data:\r\n```python\r\n>>> Z = [82, 82, 83]\r\n>>> N = [126, 127, 130]\r\n>>> M = [-21.34, -18.0, -14.45]\r\n>>> Table.from_ZNM(Z, N, M, name='Custom Table')\r\nZ   N  \r\n82  126   -21.34\r\n    127   -18.00\r\n83  130   -14.45\r\nName: Custom Table, dtype: float64\r\n```\r\n\r\n* Calculate the root mean squared error of Moller, et al. *Atomic Data and Nuclear Data Tables*, **59** (1995), 185-351:\r\n```python\r\n>>> Table('FRDM95').rmse(relative_to='AME2003')\r\n0.890859326191\r\n```\r\n\r\n* Plot model divergence for *Z=50* taking **DUZU** as reference\r\n```python\r\n>>> fig, ax = plt.subplots(figsize=(5.82, 5.82*0.618))  #  golden mean\r\n>>> Z_eq_50 = lambda Z,N: Z == 50\r\n>>> names = ['AME2012','FRDM95', 'KTUY05', 'ETFSI12', 'HFB14', 'MAJA88', 'GK88']\r\n>>> markers = ['s', '.', ',', 'o', 'v', 'p', '*', 'h', 'H', '+', 'x', 'D', 'd', '|', '_']\r\n>>> styles = ['-', '--', '-.', ':']\r\n>>> for i, name in enumerate(names):\r\n           Table(name).error(relative_to='DUZU').select(Z_eq_50).unstack(level=0).plot(ax=ax, \r\n               linewidth=1, color='k', style=styles[i % 4], markersize=5, marker=markers[i], legend=False)\r\n```\r\n![model_divergence](http://i.imgur.com/wDMpcdl.png)\r\n* Calculate 2 neutron separation energies for even-even nuclei:\r\n\r\n```python\r\n>>> table = Table('AME2012').even_even.s2n\r\nZ  N \r\n2  2           NaN\r\n   4      0.975454\r\n   6      2.125034\r\n   8     -1.417666\r\n4  2           NaN\r\n       ...\r\n```\r\n\r\n* Select nuclei with Z,N > 28:\r\n\r\n```python\r\n>>> condition = lambda Z,N: Z > 28 and N > 28\r\n>>> table.select(condition)\r\n30  30    28.016334\r\n    32    23.136434\r\n    34    20.978934\r\n    36    19.037934\r\n    38    17.250334\r\n    40    15.700534\r\n       ...\r\n```\r\n### Derived quantities\r\n* The following derived quantities are available:\r\n\t* q_alpha: Q-value of beta decay\r\n\t* q_beta: Q-value of beta decay\r\n\t* s2n, s1n: Neutron separation energies\r\n        * s2p, s1p: Proton separation energies\r\n\r\n** Example: Plot binding energies per nucleon.**\r\n\r\n```python\r\n\r\n>>> t = Table('AME2012')\r\n>>> (t.binding_energy/t.A).plot()\r\n```\r\n\r\n![binding_energies](http://i.imgur.com/z29okud.png)\r\n\r\nInstall\r\n--------\r\n\r\nJust do:\r\n\r\n    pip install masstable\r\n\r\n\r\nRequirements\r\n-------------\r\n\t\r\n* python >= 2.7\r\n* pandas >= 0.11\r\n\r\n\r\nCredits\r\n--------\r\nYaser Martinez","google":"UA-42784632-1","note":"Don't delete this file! It's used internally to help with page regeneration."}